/* Import Inter font to match wbor.org styling */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

body {
    font-family: 'Inter', sans-serif;
    letter-spacing: 0.025rem;
}

body {
    color: #EEEEEE;
}

svg {
    color: #EEEEEE;
    transition: color 0.125s ease;
}

svg:hover {
    color: rgb(233, 0, 0);
    transition: color 0.25s ease;
}

.now-playing-art a.album-art {
    display: inline-block;
    height: 85px;
    width: 85px;
}

/* Set root default font size that rem is based on */
:root {
    --bs-root-font-size: 16px;
}

/* Stream Player: display as a centered flex container */
.radio-player-widget {
    display: flex;
    /* Bring play button vertically in line with rest of player */
    background: #171717;
    border-radius: 0.5rem;
    padding: 6px;
    align-items: center;
    /* Not necessary but reduces flexbox size */
}

/* Stream Player: ensure sizing even in case of no title */
.now-playing-main {
    padding-right: 1rem;
    padding-left: 1rem;
    min-width: 20vi;
}

/* Stream Player: Hide the volume control and stream selector (in the case we ever get more than one mount point) */
.radio-control-volume,
.radio-control-select-stream {
    display: none !important;
}

/* Stream Player: standardize album art as square and fitting container */
.now-playing-art {
    width: 85px;
    height: 85px;
    overflow: hidden;
    pointer-events: none;
    /* Disable art lightbox */
    padding-right: 0rem !important;
    /* Necessary since there is a default padding */
}

.now-playing-art img {
    aspect-ratio: 1 / 1;
    object-fit: cover !important;
    width: 100% !important;
    border-radius: 0.5rem;
}

/* Stream Player: play button tweaks */
.radio-player-widget .radio-controls .radio-control-play-button {
    margin-right: 0rem;
    /* Override default of .25 */
}

.btn {
    --bs-btn-border-width: none;
    /* Disable outline surrounding button element when clicking */
}

.radio-controls .icon {
    font-size: 3.125rem;
    /* Increase size */
}

/* Stream Player: handle overflow */
.now-playing-title,
.now-playing-artist {
    text-overflow: ellipsis !important;
    overflow: hidden !important;
    white-space: nowrap !important;
}

.now-playing-title {
    font-weight: bolder;
}

.now-playing-main {
    display: flex;
    align-items: center;
}

@media (min-width: 322px) {
    .now-playing-main::before {
        content: "";
        width: 0.66rem;
        height: 0.66rem;
        border-radius: 50%;
        background-color: red;
        margin-right: 1rem;
        box-shadow: 0rem 0rem 0.5rem #F00, 0rem 0rem 0.5rem #F00, 0rem 0rem 0.5rem #F00;
        animation: pulsate 3s ease-in-out infinite;
    }
}

@keyframes pulsate {
    0% {
        opacity: 0.33;
    }

    50% {
        opacity: 1;
    }

    100% {
        opacity: 0.33;
    }
}

.now-playing-details {
    max-width: 81vw;
    /* Making compatible even with the original iPhone resolution width */
}

h4 {
    font-size: 1rem !important;
    /* now-playing-title */
}

h5 {
    font-size: 0.9rem !important;
    /* now-playing-artist */
}

/* Recently Played: hide play order numbers */
.order {
    display: none !important
}

/* Recently Played: disable clicking artwork links, standardize display */
.album-art {
    pointer-events: none;
}

.album_art {
    aspect-ratio: 1 / 1;
    object-fit: cover !important;
    border-radius: 0.5rem !important;
}

/* Recently Played: handle overflow */
.name {
    overflow: hidden !important;
    white-space: nowrap !important;
    width: 100% !important;
}

strong,
span {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

/* Recently Played: song title */
strong {
    font-size: 1rem;
}

/* Recently Played: song artist */
span {
    font-size: 0.9rem;
}

/* Recently Played: "# minutes ago" */
div.song:nth-child(n)>small:nth-child(n) {
    color: #A8A8A8 !important;
    font-size: .8rem;
}


/* --------- IFRAME EMBEDS --------- */


/* Stream Player Embed */
#station-nowplaying {
    display: flex;
    /* Shrink width of embed to real width of its content */
    justify-content: center;
    /* Center the embedded player in the center of its container */
}

/* Recently Played Songs Embed */
#song_history {
    display: flex;
    /* Shrink width of embed to real width of its content */
    justify-content: center;
    /* Center the embedded player in the center of its container */
}

#station-history {
    max-width: 100%;
    /* Contain content within container without overflow */
}